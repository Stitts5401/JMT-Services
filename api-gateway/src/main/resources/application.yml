server:
  port: 8282

jwt:
  auth:
    converter:
      resource-id: jmt_client
      role-prefix: ROLE_
      jwt-realm-access-claim: resource_access
      jwt-uri: http://localhost:8080/auth/realms/jmt_realm/protocol/openid-connect/certs

eureka:
  client:
    service-url:
      defaultZone: http://eureka:password@localhost:8761/eureka/
    registerWithEureka: true
    fetchRegistry: true
app:
  eureka-server: localhost
spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: eureka-server
          uri: http://eureka:password@${app.eureka-server}:8761
          predicates:
            - Path=/eureka/web
        - id: eureka-server-static
          uri: http://eureka:password@${app.eureka-server}:8761
          predicates:
            - Path=/eureka/
        - id: job-service
          uri: http://job-service:8181
          predicates:
            - Path=/api/v1/jobs/**
          filters:
            - RewritePath=/api/v1/(?<segment>.*),/${segment}
        - id: user-service
          uri: http://user-service:5151
          predicates:
            - Path=/api/v1/user/**
          filters:
            - RewritePath=/api/v1/(?<segment>.*),/${segment}
  output:
    ansi:
      enabled: always
  r2dbc:
    url: r2dbc:mysql://localhost:3308/jmt
    password: ADMIN1234
    username: admin
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/auth/realms/jmt_realm

logging:
  level:
    web: trace
    org:
      springframework:
        cloud:
          gateway:
            route:
              RouteDefinitionRouteLocator: info
            gateway: trace
    root: info

zipkin:
  base-url: http://localhost:9411
